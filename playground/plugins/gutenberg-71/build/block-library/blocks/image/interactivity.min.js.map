{"version":3,"file":"./blocks/image/interactivity.min.js","mappings":"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","sources":["webpack://wp/./packages/block-library/src/image/interactivity.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { store } from '../utils/interactivity';\n\nconst focusableSelectors = [\n\t'a[href]',\n\t'area[href]',\n\t'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n\t'select:not([disabled]):not([aria-hidden])',\n\t'textarea:not([disabled]):not([aria-hidden])',\n\t'button:not([disabled]):not([aria-hidden])',\n\t'iframe',\n\t'object',\n\t'embed',\n\t'[contenteditable]',\n\t'[tabindex]:not([tabindex^=\"-\"])',\n];\n\nstore( {\n\tactions: {\n\t\tcore: {\n\t\t\timage: {\n\t\t\t\tshowLightbox: ( { context, event } ) => {\n\t\t\t\t\t// We can't initialize the lightbox until the reference\n\t\t\t\t\t// image is loaded, otherwise the UX is broken.\n\t\t\t\t\tif ( ! context.core.image.imageLoaded ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcontext.core.image.initialized = true;\n\t\t\t\t\tcontext.core.image.lastFocusedElement =\n\t\t\t\t\t\twindow.document.activeElement;\n\t\t\t\t\tcontext.core.image.scrollDelta = 0;\n\n\t\t\t\t\tcontext.core.image.lightboxEnabled = true;\n\t\t\t\t\tif ( context.core.image.lightboxAnimation === 'zoom' ) {\n\t\t\t\t\t\tsetZoomStyles(\n\t\t\t\t\t\t\tevent.target.nextElementSibling,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Hide overflow only when the animation is in progress,\n\t\t\t\t\t// otherwise the removal of the scrollbars will draw attention\n\t\t\t\t\t// to itself and look like an error\n\t\t\t\t\tdocument.documentElement.classList.add(\n\t\t\t\t\t\t'has-lightbox-open'\n\t\t\t\t\t);\n\n\t\t\t\t\t// Since the img is hidden and its src not loaded until\n\t\t\t\t\t// the lightbox is opened, let's create an img element on the fly\n\t\t\t\t\t// so we can get the dimensions we need to calculate the styles\n\t\t\t\t\tcontext.core.image.preloadInitialized = true;\n\t\t\t\t\tconst imgDom = document.createElement( 'img' );\n\t\t\t\t\timgDom.onload = function () {\n\t\t\t\t\t\tcontext.core.image.activateLargeImage = true;\n\t\t\t\t\t};\n\t\t\t\t\timgDom.setAttribute(\n\t\t\t\t\t\t'src',\n\t\t\t\t\t\tcontext.core.image.imageUploadedSrc\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\thideLightbox: async ( { context, event } ) => {\n\t\t\t\t\tcontext.core.image.hideAnimationEnabled = true;\n\t\t\t\t\tif ( context.core.image.lightboxEnabled ) {\n\t\t\t\t\t\t// If scrolling, wait a moment before closing the lightbox.\n\t\t\t\t\t\tif ( context.core.image.lightboxAnimation === 'fade' ) {\n\t\t\t\t\t\t\tcontext.core.image.scrollDelta += event.deltaY;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tevent.type === 'mousewheel' &&\n\t\t\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t\t\twindow.scrollY -\n\t\t\t\t\t\t\t\t\t\tcontext.core.image.scrollDelta\n\t\t\t\t\t\t\t\t) < 10\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tcontext.core.image.lightboxAnimation === 'zoom'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Disable scroll until the zoom animation ends.\n\t\t\t\t\t\t\t// Get the current page scroll position\n\t\t\t\t\t\t\tconst scrollTop =\n\t\t\t\t\t\t\t\twindow.pageYOffset ||\n\t\t\t\t\t\t\t\tdocument.documentElement.scrollTop;\n\t\t\t\t\t\t\tconst scrollLeft =\n\t\t\t\t\t\t\t\twindow.pageXOffset ||\n\t\t\t\t\t\t\t\tdocument.documentElement.scrollLeft;\n\t\t\t\t\t\t\t// if any scroll is attempted, set this to the previous value.\n\t\t\t\t\t\t\twindow.onscroll = function () {\n\t\t\t\t\t\t\t\twindow.scrollTo( scrollLeft, scrollTop );\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t// Enable scrolling after the animation finishes\n\t\t\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\t\t\twindow.onscroll = function () {};\n\t\t\t\t\t\t\t}, 400 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdocument.documentElement.classList.remove(\n\t\t\t\t\t\t\t'has-lightbox-open'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcontext.core.image.lightboxEnabled = false;\n\t\t\t\t\t\tcontext.core.image.lastFocusedElement.focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandleKeydown: ( { context, actions, event } ) => {\n\t\t\t\t\tif ( context.core.image.lightboxEnabled ) {\n\t\t\t\t\t\tif ( event.key === 'Tab' || event.keyCode === 9 ) {\n\t\t\t\t\t\t\t// If shift + tab it change the direction\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tevent.shiftKey &&\n\t\t\t\t\t\t\t\twindow.document.activeElement ===\n\t\t\t\t\t\t\t\t\tcontext.core.image.firstFocusableElement\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tcontext.core.image.lastFocusableElement.focus();\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t! event.shiftKey &&\n\t\t\t\t\t\t\t\twindow.document.activeElement ===\n\t\t\t\t\t\t\t\t\tcontext.core.image.lastFocusableElement\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tcontext.core.image.firstFocusableElement.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( event.key === 'Escape' || event.keyCode === 27 ) {\n\t\t\t\t\t\t\tactions.core.image.hideLightbox( {\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tselectors: {\n\t\tcore: {\n\t\t\timage: {\n\t\t\t\troleAttribute: ( { context } ) => {\n\t\t\t\t\treturn context.core.image.lightboxEnabled ? 'dialog' : '';\n\t\t\t\t},\n\t\t\t\tresponsiveImgSrc: ( { context } ) => {\n\t\t\t\t\treturn context.core.image.activateLargeImage\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: context.core.image.imageCurrentSrc;\n\t\t\t\t},\n\t\t\t\tenlargedImgSrc: ( { context } ) => {\n\t\t\t\t\treturn context.core.image.initialized\n\t\t\t\t\t\t? context.core.image.imageUploadedSrc\n\t\t\t\t\t\t: '';\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\teffects: {\n\t\tcore: {\n\t\t\timage: {\n\t\t\t\tsetCurrentSrc: ( { context, ref } ) => {\n\t\t\t\t\tif ( ref.complete ) {\n\t\t\t\t\t\tcontext.core.image.imageLoaded = true;\n\t\t\t\t\t\tcontext.core.image.imageCurrentSrc = ref.currentSrc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref.addEventListener( 'load', function () {\n\t\t\t\t\t\t\tcontext.core.image.imageLoaded = true;\n\t\t\t\t\t\t\tcontext.core.image.imageCurrentSrc =\n\t\t\t\t\t\t\t\tthis.currentSrc;\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpreloadLightboxImage: ( { context, ref } ) => {\n\t\t\t\t\tref.addEventListener( 'mouseover', () => {\n\t\t\t\t\t\tif ( ! context.core.image.preloadInitialized ) {\n\t\t\t\t\t\t\tcontext.core.image.preloadInitialized = true;\n\t\t\t\t\t\t\tconst imgDom = document.createElement( 'img' );\n\t\t\t\t\t\t\timgDom.setAttribute(\n\t\t\t\t\t\t\t\t'src',\n\t\t\t\t\t\t\t\tcontext.core.image.imageUploadedSrc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\tinitLightbox: async ( { context, ref } ) => {\n\t\t\t\t\tcontext.core.image.figureRef =\n\t\t\t\t\t\tref.querySelector( 'figure' );\n\t\t\t\t\tcontext.core.image.imageRef = ref.querySelector( 'img' );\n\t\t\t\t\tif ( context.core.image.lightboxEnabled ) {\n\t\t\t\t\t\tconst focusableElements =\n\t\t\t\t\t\t\tref.querySelectorAll( focusableSelectors );\n\t\t\t\t\t\tcontext.core.image.firstFocusableElement =\n\t\t\t\t\t\t\tfocusableElements[ 0 ];\n\t\t\t\t\t\tcontext.core.image.lastFocusableElement =\n\t\t\t\t\t\t\tfocusableElements[ focusableElements.length - 1 ];\n\n\t\t\t\t\t\tref.querySelector( '.close-button' ).focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n} );\n\nfunction setZoomStyles( imgDom, context, event ) {\n\tlet targetWidth = context.core.image.targetWidth;\n\tlet targetHeight = context.core.image.targetHeight;\n\n\tconst verticalPadding = 40;\n\n\t// As per the design, let's allow the image to stretch\n\t// to the full width of its containing figure, but for the height,\n\t// constrain it with a fixed padding\n\tconst containerWidth = context.core.image.figureRef.clientWidth;\n\n\t// The lightbox image has `positione:absolute` and\n\t// ignores its parent's padding, so let's set the padding here,\n\t// to be used when calculating the image width and positioning\n\tlet horizontalPadding = 0;\n\tif ( containerWidth > 480 ) {\n\t\thorizontalPadding = 40;\n\t} else if ( containerWidth > 1920 ) {\n\t\thorizontalPadding = 80;\n\t}\n\n\tconst containerHeight =\n\t\tcontext.core.image.figureRef.clientHeight - verticalPadding * 2;\n\n\t// Check difference between the image and figure dimensions\n\tconst widthOverflow = Math.abs(\n\t\tMath.min( containerWidth - targetWidth, 0 )\n\t);\n\tconst heightOverflow = Math.abs(\n\t\tMath.min( containerHeight - targetHeight, 0 )\n\t);\n\n\t// If image is larger than its container any dimension, resize along its largest axis.\n\t// For vertically oriented devices, always maximize the width.\n\tif ( widthOverflow > 0 || heightOverflow > 0 ) {\n\t\tif (\n\t\t\twidthOverflow >= heightOverflow ||\n\t\t\tcontainerHeight >= containerWidth\n\t\t) {\n\t\t\ttargetWidth = containerWidth - horizontalPadding * 2;\n\t\t\ttargetHeight =\n\t\t\t\timgDom.naturalHeight * ( targetWidth / imgDom.naturalWidth );\n\t\t} else {\n\t\t\ttargetHeight = containerHeight;\n\t\t\ttargetWidth =\n\t\t\t\timgDom.naturalWidth * ( targetHeight / imgDom.naturalHeight );\n\t\t}\n\t}\n\n\t// The reference img element lies adjacent to the event target button in the DOM\n\tconst { x: originLeft, y: originTop } =\n\t\tevent.target.nextElementSibling.getBoundingClientRect();\n\tconst scaleWidth =\n\t\tevent.target.nextElementSibling.offsetWidth / targetWidth;\n\tconst scaleHeight =\n\t\tevent.target.nextElementSibling.offsetHeight / targetHeight;\n\n\t// Get values used to center the image\n\tlet targetLeft = 0;\n\tif ( targetWidth >= containerWidth ) {\n\t\ttargetLeft = horizontalPadding;\n\t} else {\n\t\ttargetLeft = ( containerWidth - targetWidth ) / 2;\n\t}\n\tlet targetTop = 0;\n\tif ( targetHeight >= containerHeight ) {\n\t\ttargetTop = verticalPadding;\n\t} else {\n\t\ttargetTop = ( containerHeight - targetHeight ) / 2 + verticalPadding;\n\t}\n\n\tconst root = document.documentElement;\n\troot.style.setProperty( '--lightbox-scale-width', scaleWidth );\n\troot.style.setProperty( '--lightbox-scale-height', scaleHeight );\n\troot.style.setProperty( '--lightbox-image-max-width', targetWidth + 'px' );\n\troot.style.setProperty(\n\t\t'--lightbox-image-max-height',\n\t\ttargetHeight + 'px'\n\t);\n\troot.style.setProperty(\n\t\t'--lightbox-initial-left-position',\n\t\toriginLeft + 'px'\n\t);\n\troot.style.setProperty(\n\t\t'--lightbox-initial-top-position',\n\t\toriginTop + 'px'\n\t);\n\troot.style.setProperty(\n\t\t'--lightbox-target-left-position',\n\t\ttargetLeft + 'px'\n\t);\n\troot.style.setProperty(\n\t\t'--lightbox-target-top-position',\n\t\ttargetTop + 'px'\n\t);\n}\n"],"names":["focusableSelectors","store","actions","core","image","showLightbox","context","event","imageLoaded","initialized","lastFocusedElement","window","document","activeElement","scrollDelta","lightboxEnabled","lightboxAnimation","imgDom","targetWidth","targetHeight","containerWidth","figureRef","clientWidth","horizontalPadding","containerHeight","clientHeight","verticalPadding","widthOverflow","Math","abs","min","heightOverflow","naturalHeight","naturalWidth","x","originLeft","y","originTop","target","nextElementSibling","getBoundingClientRect","scaleWidth","offsetWidth","scaleHeight","offsetHeight","targetLeft","targetTop","root","documentElement","style","setProperty","setZoomStyles","classList","add","preloadInitialized","createElement","onload","activateLargeImage","setAttribute","imageUploadedSrc","hideLightbox","async","hideAnimationEnabled","deltaY","type","scrollY","scrollTop","pageYOffset","scrollLeft","pageXOffset","onscroll","scrollTo","setTimeout","remove","focus","handleKeydown","key","keyCode","shiftKey","firstFocusableElement","preventDefault","lastFocusableElement","selectors","roleAttribute","responsiveImgSrc","imageCurrentSrc","enlargedImgSrc","effects","setCurrentSrc","ref","complete","currentSrc","addEventListener","this","preloadLightboxImage","initLightbox","querySelector","imageRef","focusableElements","querySelectorAll","length"],"sourceRoot":""}