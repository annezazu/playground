import*as e from"@wordpress/interactivity";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},o={};t.d(o,{N:()=>p,S:()=>g});const r=(m={privateApis:()=>e.privateApis,render:()=>e.render,store:()=>e.store},h={},t.d(h,m),h),{directivePrefix:n,getRegionRootFragment:a,initialVdom:i,toVdom:s}=(0,r.privateApis)("I acknowledge that using private APIs means my theme or plugin will inevitably break in the next version of WordPress."),c=new Map,d=e=>{const t=new URL(e,window.location);return t.pathname+t.search},l=(e,{vdom:t}={})=>{const o={},r=`data-${n}-router-region`;e.querySelectorAll(`[${r}]`).forEach((e=>{const n=e.getAttribute(r);o[n]=t?.has(e)?t.get(e):s(e)}));const a=e.querySelector("title")?.innerText;return{regions:o,title:a}},w=e=>{const t=`data-${n}-router-region`;document.querySelectorAll(`[${t}]`).forEach((o=>{const n=o.getAttribute(t),i=a(o);(0,r.render)(e.regions[n],i)})),e.title&&(document.title=e.title)};var m,h;window.addEventListener("popstate",(async()=>{const e=d(window.location),t=c.has(e)&&await c.get(e);t?(w(t),g.url=window.location.href):window.location.reload()})),c.set(d(window.location),Promise.resolve(l(document,{vdom:i})));let u="";const{state:g,actions:p}=(0,r.store)("core/router",{state:{url:window.location.href,navigation:{hasStarted:!1,hasFinished:!1,texts:{}}},actions:{*navigate(e,t={}){const o=d(e),{navigation:r}=g,{loadingAnimation:n=!0,screenReaderAnnouncement:a=!0,timeout:i=1e4}=t;u=e,p.prefetch(o,t);const s=new Promise((e=>setTimeout(e,i))),l=setTimeout((()=>{u===e&&(n&&(r.hasStarted=!0,r.hasFinished=!1),a&&(r.message=r.texts.loading))}),400),m=yield Promise.race([c.get(o),s]);clearTimeout(l),u===e&&(m?(w(m),window.history[t.replace?"replaceState":"pushState"]({},"",e),g.url=e,n&&(r.hasStarted=!1,r.hasFinished=!0),a&&(r.message=r.texts.loaded+(r.message===r.texts.loaded?"Â ":""))):(window.location.assign(e),yield new Promise((()=>{}))))},prefetch(e,t={}){const o=d(e);!t.force&&c.has(o)||c.set(o,(async(e,{html:t})=>{try{if(!t){const o=await window.fetch(e);if(200!==o.status)return!1;t=await o.text()}const o=(new window.DOMParser).parseFromString(t,"text/html");return l(o)}catch(e){return!1}})(o,t))}}});var v=o.N,f=o.S;export{v as actions,f as state};
//# sourceMappingURL=router.min.js.map